{"version":3,"sources":["components/Header/favicon.svg","components/Header/index.js","components/DrilldownExample/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","favIcon","alt","style","width","height","marginLeft","href","frameBorder","scrolling","title","StatefulExample","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleStaggered","staggered","state","setState","onSelect","name","selected","sampleData","keyBy","parent","children","component","dist_module","onClick","items","mapValues","item","objectSpread","map","_this2","_this$state","itemComponents","currentTitle","type","checked","onChange","header","footer","concat","length","staggeredAnimation","onBackClick","Component","App","Header_Header","DrilldownExample_StatefulExample","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b82697ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.9b81a5b0.svg\";","import React from 'react';\nimport './Header.css';\nimport favIcon from './favicon.svg';\n\nexport default function Header() {\n    return (\n        <header className=\"Header\">\n            <div className=\"Header-inner\">\n                <h1>\n                <img src={favIcon} alt=\"React Drilldown logo\" style={{ width: 32, height: 32, marginLeft: -40 }} /> React Drilldown\n                </h1>\n                <h2>An iOS-style data-driven Drilldown Menu for React.</h2>\n            </div>\n            <div className=\"Header-subheader\">\n                <div className=\"Header-inner\">\n                    <a href=\"https://github.com/lucastobrazil/react-drilldown\">Code and Docs on GitHub</a>\n                    <iframe\n                        src=\"https://ghbtns.com/github-btn.html?user=lucastobrazil&repo=react-drilldown&type=star&count=true&size=large\"\n                        frameBorder=\"0\"\n                        scrolling=\"0\"\n                        width=\"160px\"\n                        height=\"30px\"\n                        title=\"Star Me!\"\n                    />\n                </div>\n            </div>\n        </header>\n    );\n}\n","import React, { Component } from 'react';\nimport { Drilldown, DrilldownButton, DrilldownLink } from 'react-drilldown';\nimport { keyBy, mapValues } from 'lodash/fp';\nimport './style.css';\n\n\nexport default class StatefulExample extends Component {\n    constructor() {\n        super();\n        this.state = {\n            staggered: true,\n            selected: 'foodType',\n        };\n\n        this.sampleData = keyBy('name', [\n            {\n                name: 'foodType',\n                title: 'Choose a Food Type',\n                parent: null,\n                children: ['healthy', 'unhealthy'],\n            },\n            {\n                name: 'healthy',\n                title: 'Healthy Foods',\n                parent: 'foodType',\n                children: ['healthyFruits', 'healthyVegetables', 'healthyGrains'],\n                component: () => <DrilldownButton onClick={() => this.onSelect('healthy')}>Healthy</DrilldownButton>,\n            },\n            {\n                name: 'unhealthy',\n                title: 'Unhealthy Foods',\n                parent: 'foodType',\n                children: ['unhealthyCandy', 'unhealthyFastFood'],\n                component: () => <DrilldownButton onClick={() => this.onSelect('unhealthy')}>Unhealthy</DrilldownButton>,\n            },\n            {\n                name: 'healthyFruits',\n                title: 'Healthy Fruits',\n                parent: 'healthy',\n                children: ['Apple', 'Banana', 'Watermelon'],\n                component: () => (\n                    <DrilldownButton onClick={() => this.onSelect('healthyFruits')}>Fruits</DrilldownButton>\n                ),\n            },\n            {\n                name: 'Apple',\n                title: null,\n                parent: 'healthyFruits',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Apple</DrilldownLink>,\n            },\n            {\n                name: 'Banana',\n                title: null,\n                parent: 'healthyFruits',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Banana</DrilldownLink>,\n            },\n            {\n                name: 'Watermelon',\n                title: null,\n                parent: 'healthyFruits',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Watermelon</DrilldownLink>,\n            },\n            {\n                name: 'healthyVegetables',\n                title: 'Healthy Veges',\n                parent: 'healthy',\n                children: ['Carrot', 'Pumpkin', 'Broccoli'],\n                component: () => (\n                    <DrilldownButton onClick={() => this.onSelect('healthyVegetables')}>Vegetables</DrilldownButton>\n                ),\n            },\n            {\n                name: 'Carrot',\n                title: null,\n                parent: 'healthyVegetables',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Carrot</DrilldownLink>,\n            },\n            {\n                name: 'Pumpkin',\n                title: null,\n                parent: 'healthyVegetables',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Pumpkin</DrilldownLink>,\n            },\n            {\n                name: 'Broccoli',\n                title: null,\n                parent: 'healthyVegetables',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Broccoli</DrilldownLink>,\n            },\n            {\n                name: 'healthyGrains',\n                title: 'Healthy Grains',\n                parent: 'healthy',\n                children: ['Rice'],\n                component: () => (\n                    <DrilldownButton onClick={() => this.onSelect('healthyGrains')}>Rice</DrilldownButton>\n                ),\n            },\n            {\n                name: 'Rice',\n                title: null,\n                parent: 'healthyGrains',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Rice</DrilldownLink>,\n            },\n            {\n                name: 'unhealthyCandy',\n                title: 'Unhealthy Candy',\n                parent: 'unhealthy',\n                children: ['Jellybeans', 'Chocolate', 'Licorice'],\n                component: () => (\n                    <DrilldownButton onClick={() => this.onSelect('unhealthyCandy')}>Candy</DrilldownButton>\n                ),\n            },\n            {\n                name: 'Jellybeans',\n                title: null,\n                parent: 'unhealthyCandy',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Jellybeans</DrilldownLink>,\n            },\n            {\n                name: 'Chocolate',\n                title: null,\n                parent: 'unhealthyCandy',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Chocolate</DrilldownLink>,\n            },\n            {\n                name: 'Licorice',\n                title: null,\n                parent: 'unhealthyCandy',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Licorice</DrilldownLink>,\n            },\n            {\n                name: 'unhealthyFastFood',\n                title: 'Unhealthy Fast Food',\n                parent: 'unhealthy',\n                children: ['burgers', 'burritos'],\n                component: () => (\n                    <DrilldownButton onClick={() => this.onSelect('unhealthyFastFood')}>Fast Food</DrilldownButton>\n                ),\n            },\n            {\n                name: 'burgers',\n                title: null,\n                parent: 'unhealthyFastFood',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Burgers</DrilldownLink>,\n            },\n            {\n                name: 'burritos',\n                title: null,\n                parent: 'unhealthyFastFood',\n                children: [],\n                component: () => <DrilldownLink href=\"#\">Burritos</DrilldownLink>,\n            },\n        ]);\n\n        this.items = mapValues(item => {\n            return {\n                ...item,\n                children: item.children.map(name => this.sampleData[name].component),\n            };\n        }, this.sampleData);\n    }\n\n    toggleStaggered = () => {\n        const { staggered } = this.state;\n        this.setState({ staggered: !staggered });\n    };\n\n    onSelect = name => this.setState({ selected: name });\n\n    render() {\n        const { selected, staggered } = this.state;\n        const itemComponents = this.items[selected].children;\n        const currentTitle = this.items[selected].title;\n        const parent = this.items[selected].parent;\n        return (\n            <div>\n                <p>\n                    <label>\n                        <input type=\"checkbox\" checked={this.state.staggered} onChange={this.toggleStaggered} />\n                        Staggered Animation\n                    </label>\n                </p>\n                <div className=\"Example-container\">\n                    <Drilldown\n                        header={currentTitle}\n                        footer={`${itemComponents.length} items`}\n                        items={itemComponents}\n                        staggeredAnimation={staggered}\n                        onBackClick={parent ? () => this.onSelect(parent) : null}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport DrilldownExample from './components/DrilldownExample';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <DrilldownExample />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}